[{"title":"记一次利用PhoneSploit渗透安卓设备","url":"/2022/05/21/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%88%A9%E7%94%A8PhoneSploit%E6%B8%97%E9%80%8F%E5%AE%89%E5%8D%93%E8%AE%BE%E5%A4%87/","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>以下内容均为本人测试漏洞行为并无违法用途</p>\n<p>也请读者不要用此技术进行违法犯罪行为</p>\n<p>本人已将此漏洞进行提交</p>\n<span id=\"more\"></span>\n\n<p>需要用到的工具</p>\n<p>1.浏览器</p>\n<p>2.命令窗口</p>\n<p>一.部署所需环境</p>\n<p>这一步很简单 无脑复制粘贴回车即可</p>\n<p>git clone  <a href=\"https://github.com/soryecker/phone_sploit_sor.git\">https://github.com/soryecker/phone_sploit_sor.git</a> </p>\n<p>cd phone_sploit_sor</p>\n<p>pip3 install colorma</p>\n<p>windows系统执行后在文件管理中找到phone_sploit_sor文件夹<img src=\"/../imgs/$%7Bfiilename%7D/%E6%88%AA%E5%B1%8F2022-05-21%20%E4%B8%8B%E5%8D%881.20.04.png\" alt=\"截屏2022-05-21 下午1.20.04\"></p>\n<p>将adb.rar文件解压</p>\n<p>linux系统貌似可以直接运行</p>\n<p>mac系统需要配置adb </p>\n<p>命令brew install –cask android-platform-tools</p>\n<p>配置好adb之后</p>\n<p>执行python3 phonesploit.py </p>\n<p>到此即可把环境部署完毕</p>\n<p>(注意以上代码需要以root用户执行 非root要加sudo 否则报错)</p>\n<p>二.找寻目标</p>\n<p>此漏洞利用的是远程adb开放的5555端口</p>\n<p>我们可以去shodan或者钟馗之眼中搜索关键词“Android+Debug+Bridge“</p>\n<p>即可看到很多开放5555端口的设备</p>\n<p><a href=\"https://www.zoomeye.org/\">钟馗之眼</a></p>\n<p><a href=\"https://www.shodan.io/\">shodan</a></p>\n<p>都需要注册账号登录</p>\n<p><img src=\"/../imgs/$%7Bfiilename%7D/%E6%88%AA%E5%B1%8F2022-05-21%20%E4%B8%8B%E5%8D%881.16.44.png\" alt=\"截屏2022-05-21 下午1.16.44\"></p>\n<p>我们这里随便找到了一个小白鼠做实验</p>\n<p>执行python3 phonesploit.py 后<img src=\"/../imgs/$%7Bfiilename%7D/%E6%88%AA%E5%B1%8F2022-05-21%20%E4%B8%8B%E5%8D%881.31.16.png\" alt=\"截屏2022-05-21 下午1.31.16\"></p>\n<p>输入小白鼠的ip回车（我这里是试了几个 都没法连接）</p>\n<p>这种出现failed的都是无法连接的</p>\n<p>这时候我们ctrl+d把脚本关掉</p>\n<p>重新输入python3 phonesploit.py 然后找新的再次连接</p>\n<p><img src=\"/../imgs/$%7Bfiilename%7D/%E6%88%AA%E5%B1%8F2022-05-21%20%E4%B8%8B%E5%8D%881.33.49.png\" alt=\"截屏2022-05-21 下午1.33.49\"></p>\n<p>这种就是连接成功了</p>\n<p>我们输入7然后回车</p>\n<p>便可截屏他的屏幕并且保存</p>\n<p><img src=\"/../imgs/$%7Bfiilename%7D/%E6%88%AA%E5%B1%8F2022-05-21%20%E4%B8%8B%E5%8D%881.35.28.png\" alt=\"截屏2022-05-21 下午1.35.28\"></p>\n<p>这里给大家看一下保存的内容<img src=\"/../imgs/$%7Bfiilename%7D/screen.png\" alt=\"screen\"></p>\n<p>一般这种有公网ip的机器都不是个人手机 但是我们也不要用做违法用途</p>\n<p>此漏洞我已经提交了 大家不要干坏事哦</p>\n","categories":["笔记"],"tags":["渗透攻击"]},{"title":"记一次Hexo博客的搭建","url":"/2022/05/20/hello-world/","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>  心血来潮打算做个博客 服务器都买好了年费 结果突然看到利用github部署博客的教程（github不倒陪你到老）倒不是为了省钱，实在是购买的服务器不太安全。</p>\n<span id=\"more\"></span>\n\n<p>一、环境准备<br>1、安装Node.js</p>\n<p>直接到官网上下载安装即可<a href=\"https://nodejs.org/en/download/\">https://nodejs.org/en/download/</a></p>\n<pre><code>Node.js (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)\nNode自带npm\n</code></pre>\n<p>2、安装Git</p>\n<pre><code>Windows：下载并安装 git.\nMac：使用 Homebrew, MacPorts 或者下载 安装程序。\nLinux (Ubuntu, Debian)：sudo apt-get install git-core\nLinux (Fedora, Red Hat, CentOS)：sudo yum install git-core\n</code></pre>\n<p>————————————————<br>环境是转载csdn上一位博主的 文章末尾会有原文链接</p>\n<p><img src=\"/imgs/$%7Bfiilename%7D/343d28b9c9178b0b857abee140a668b1.png\" alt=\"343d28b9c9178b0b857abee140a668b1\"></p>\n<p>配置到上图所示即可</p>\n<h2 id=\"二、开始安装Hexo\"><a href=\"#二、开始安装Hexo\" class=\"headerlink\" title=\"二、开始安装Hexo\"></a>二、开始安装Hexo</h2><h3 id=\"1、安装hexo\"><a href=\"#1、安装hexo\" class=\"headerlink\" title=\"1、安装hexo\"></a>1、安装hexo</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br><span class=\"line\">或者</span><br><span class=\"line\">cnpm install -g hexo-cli</span><br><span class=\"line\">123</span><br></pre></td></tr></table></figure>\n\n<p>安装完成可输入hexo -v查看版本</p>\n<h3 id=\"2、初始化hexo，新建存储博客的文件夹\"><a href=\"#2、初始化hexo，新建存储博客的文件夹\" class=\"headerlink\" title=\"2、初始化hexo，新建存储博客的文件夹\"></a>2、初始化hexo，新建存储博客的文件夹</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo init myblog</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3、进入文件夹，安装一下npm\"><a href=\"#3、进入文件夹，安装一下npm\" class=\"headerlink\" title=\"3、进入文件夹，安装一下npm\"></a>3、进入文件夹，安装一下npm</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">cd myblog</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n\n<p>可以看到我们的hexo站点就已经安装好了，接下来就可以直接启动他了</p>\n<h3 id=\"4、启动服务站点\"><a href=\"#4、启动服务站点\" class=\"headerlink\" title=\"4、启动服务站点\"></a>4、启动服务站点</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo g </span><br><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n\n<p>访问<a href=\"http://localhost:4000/\">http://localhost:4000/</a> 至此hero就搭建好了。可以在本地访问了</p>\n<p>ps:初次启动速度较慢 请有足够的耐心</p>\n<p>如果启动失败 这个问题我也没有遇到过 请问度娘</p>\n<p>三、Gitee上建站访问（需要实名认证，如不想，请下滑看github配置教程）</p>\n<p>可在github或者gitee上建站，gitee国内访问快一些<br>1、新建仓库</p>\n<p>格式必须是：用户名+.gitee.io 只有这样，将来要部署到Gite e page的时候，才会被识别，也就是xxxx.gitee.io，其中xxx就是你注册Gitee的用户名。<br>————————————————</p>\n<p><img src=\"/imgs/$%7Bfiilename%7D/3d5ab9f52a825335fea9df7e06acff9d-3034162.png\" alt=\"3d5ab9f52a825335fea9df7e06acff9d\"></p>\n<h3 id=\"2、将hexo博客站点上传到gitee上\"><a href=\"#2、将hexo博客站点上传到gitee上\" class=\"headerlink\" title=\"2、将hexo博客站点上传到gitee上\"></a>2、将hexo博客站点上传到gitee上</h3><p>这里需要安装一个hexo的上传插件deploy-git</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3、修改hexo配置文件指定仓库路径\"><a href=\"#3、修改hexo配置文件指定仓库路径\" class=\"headerlink\" title=\"3、修改hexo配置文件指定仓库路径\"></a>3、修改hexo配置文件指定仓库路径</h3><p>可在文件夹中直接打开文件，也可通过vim直接编辑</p>\n<p>命令窗口输入vim _config.yml</p>\n<p>命令窗口中输入i（需要切换输入法）</p>\n<p>找到Deployment加上（注意空格）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: 你的仓库路径</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/imgs/$%7Bfiilename%7D/6351f0a208292c8b4c0489963b0d7296.png\" alt=\"6351f0a208292c8b4c0489963b0d7296\"></p>\n<p>如图所示即可</p>\n<p>4、推送hexo站点文件</p>\n<p>之后就可以推送博客站点到gitee上了</p>\n<p>推送命令<br>hexo d</p>\n<pre><code>1\n2\n\n扩展：\n\n其中 hexo clean清除了你之前生成的东西，也可以不加。\nhexo generate 顾名思义，生成静态文章，可以用 hexo g缩写\nhexo deploy 部署文章，可以用hexo d缩写\n</code></pre>\n<p>推送中会要求输入gitee的用户名和密码（如果不想每次都输可以配置ssh，我这里就不做演示了）<br>————————————————</p>\n<p>然后就可以看到gitee上有推上来的文件了</p>\n<p><img src=\"/imgs/$%7Bfiilename%7D/90c3a63b27bb8ad3a9e6d097b759bf77.png\" alt=\"90c3a63b27bb8ad3a9e6d097b759bf77\"></p>\n<h3 id=\"5、配置Pages服务\"><a href=\"#5、配置Pages服务\" class=\"headerlink\" title=\"5、配置Pages服务\"></a>5、配置Pages服务</h3><p>目前我们站点还无法访问需要开启Gitee Pages（gitee需要开启，github不需要）</p>\n<p><img src=\"/imgs/$%7Bfiilename%7D/b9ae94584f281b39ca81f76dc030100b.png\" alt=\"b9ae94584f281b39ca81f76dc030100b\">需要手持身份证等</p>\n<p>几个小时后审核过了网站即可正常访问</p>\n<p>gitee上传新文件之后，需要手动更新一下，更新后的页面才会生效</p>\n<h2 id=\"四、GitHub上建站访问\"><a href=\"#四、GitHub上建站访问\" class=\"headerlink\" title=\"四、GitHub上建站访问\"></a>四、GitHub上建站访问</h2><p>在gitee上建站发现有限制条件，所有也可以采用github建站的方式。</p>\n<p>步骤和gitee一样。</p>\n<p>不过推送文件前要在命令窗口输入</p>\n<p>git config –global user.name “github注册用户名”</p>\n<p>git config –global user.email “github注册邮箱”</p>\n<p>注意填写 这里我有一个搞错的 查错查了一上午</p>\n<p>ssh-keygen -t rsa -C “github注册邮箱”</p>\n<p>这里一路回车 有y输y</p>\n<p>之后会给到你生成目录</p>\n<p><img src=\"/imgs/$%7Bfiilename%7D/9e5dde5c03e38f8a4cbecef0e0131bce.jpg\" alt=\"9e5dde5c03e38f8a4cbecef0e0131bce\"></p>\n<p>图片全是转载 实在不想再操作一次</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">id_rsa.pub把这个文件里的内容复制出来</span><br></pre></td></tr></table></figure>\n\n<p>而后在GitHub的setting中，找到SSH keys的设置选项，点击<code>New SSH key</code><br> 把你的<code>id_rsa.pub</code>里面的信息复制进去。</p>\n<p><img src=\"/imgs/$%7Bfiilename%7D/3194ad0a9d04d94c09485122932968f3.jpg\"></p>\n<p>在gitbash中，查看是否成功</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-推送站点到github\"><a href=\"#5-推送站点到github\" class=\"headerlink\" title=\"5.推送站点到github\"></a>5.推送站点到github</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">推送命令hexo d</span><br></pre></td></tr></table></figure>\n\n<p>如果想自己换域名请看下篇文章</p>\n","categories":["随笔"],"tags":["博客的搭建与功能完善"]},{"title":"Hexo博客更换域名","url":"/2022/05/20/1/","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>上篇的博客搭建教程完毕后想更换自己的域名的往下看</p>\n<span id=\"more\"></span>\n\n<p>由于github给的域名太长了（怕你们记不住）</p>\n<p>于是我去freenom薅了一大批自己喜欢的域名</p>\n<p><img src=\"/imgs/$%7Bfiilename%7D/yuming.png\" alt=\"yuming\">挺多中文域名的</p>\n<p>所以我就拿huasheng.cf这个域名来演示了</p>\n<p>我已经解析好dns了</p>\n<p><img src=\"/imgs/$%7Bfiilename%7D/yuming2.png\" alt=\"yuming2\"></p>\n<p>有不会的自行百度freenom注册域名教程或者等我下下下….篇</p>\n<p><img src=\"/imgs/$%7Bfiilename%7D/jiexi.png\" alt=\"jiexi\">内容那里解析你github的域名</p>\n<p>类型别搞错</p>\n<p>然后在myblog&#x2F;source&#x2F;目录内建立CNAME文件</p>\n<p>文件内容写你自己的域名 比如我就是huasheng.cf</p>\n<p>保存后记得推送到github</p>\n<p>之后去自己的项目内点击setting</p>\n<p><img src=\"/imgs/$%7Bfiilename%7D/githubyuming1.png\" alt=\"githubyuming1\"><img src=\"/imgs/$%7Bfiilename%7D/githubyuming2.png\" alt=\"githubyuming2\">修改成自己的域名即可</p>\n<p>然后访问域名即可访问自己的博客了。</p>\n","categories":["随笔"],"tags":["博客的搭建与功能完善"]},{"title":"木马捆绑流程","url":"/2022/05/23/%E6%9C%A8%E9%A9%AC%E6%8D%86%E7%BB%91%E6%B5%81%E7%A8%8B/","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>1.找到合适的apk</p>\n<p>这里找到一个实验吧</p>\n<p>app要求:够小 权限足</p>\n<p><img src=\"/../imgs/$%7Bfiilename%7D/%E6%88%AA%E5%B1%8F2022-05-23%20%E4%B8%8A%E5%8D%889.29.52.png\" alt=\"截屏2022-05-23 上午9.29.52\"></p>\n<p>这里我们拿这款软件做演示</p>\n<p><img src=\"/../imgs/$%7Bfiilename%7D/%E6%88%AA%E5%B1%8F2022-05-23%20%E4%B8%8A%E5%8D%889.30.40.png\" alt=\"截屏2022-05-23 上午9.30.40\"></p>\n<p>将软件拖入工具后点击Decompile等待即可</p>\n<p>要把名字改成中文 否则报错 亲测</p>\n<p><img src=\"/../imgs/$%7Bfiilename%7D/%E6%88%AA%E5%B1%8F2022-05-23%20%E4%B8%8A%E5%8D%889.32.28.png\" alt=\"截屏2022-05-23 上午9.32.28\"></p>\n<p>完成后我们点击<img src=\"/../imgs/$%7Bfiilename%7D/%E6%88%AA%E5%B1%8F2022-05-23%20%E4%B8%8A%E5%8D%889.32.50.png\" alt=\"截屏2022-05-23 上午9.32.50\"></p>\n<p>查看目录名称</p>\n<p><img src=\"/../imgs/$%7Bfiilename%7D/%E6%88%AA%E5%B1%8F2022-05-23%20%E4%B8%8A%E5%8D%889.33.28.png\" alt=\"截屏2022-05-23 上午9.33.28\"></p>\n<p>在这里</p>\n<p><img src=\"/../imgs/$%7Bfiilename%7D/%E6%88%AA%E5%B1%8F2022-05-23%20%E4%B8%8A%E5%8D%889.34.02.png\" alt=\"截屏2022-05-23 上午9.34.02\"></p>\n<p>选中此目录</p>\n<p><img src=\"/../imgs/$%7Bfiilename%7D/%E6%88%AA%E5%B1%8F2022-05-23%20%E4%B8%8A%E5%8D%889.34.28.png\" alt=\"截屏2022-05-23 上午9.34.28\"></p>\n<p>第二个目录在这里</p>\n<p><img src=\"/../imgs/$%7Bfiilename%7D/%E6%88%AA%E5%B1%8F2022-05-23%20%E4%B8%8A%E5%8D%889.35.31.png\" alt=\"截屏2022-05-23 上午9.35.31\"></p>\n<p>点击开始注入</p>\n<p><img src=\"/../imgs/$%7Bfiilename%7D/%E6%88%AA%E5%B1%8F2022-05-23%20%E4%B8%8A%E5%8D%889.36.03.png\" alt=\"截屏2022-05-23 上午9.36.03\"></p>\n<p>这样就注入成功了</p>\n<p><img src=\"/../imgs/$%7Bfiilename%7D/%E6%88%AA%E5%B1%8F2022-05-23%20%E4%B8%8A%E5%8D%889.36.34.png\" alt=\"截屏2022-05-23 上午9.36.34\"></p>\n<p>我们将目录重新拖拽过来 点击Compile</p>\n<p><img src=\"/../imgs/$%7Bfiilename%7D/%E6%88%AA%E5%B1%8F2022-05-23%20%E4%B8%8A%E5%8D%889.37.50.png\" alt=\"截屏2022-05-23 上午9.37.50\"></p>\n<p>见证奇迹的时刻</p>\n<p><img src=\"/../imgs/$%7Bfiilename%7D/%E6%88%AA%E5%B1%8F2022-05-23%20%E4%B8%8A%E5%8D%889.38.48.png\" alt=\"截屏2022-05-23 上午9.38.48\"></p>\n<p>注入后的app 让我们测试一下能不能正常上线<img src=\"/../imgs/$%7Bfiilename%7D/%E6%88%AA%E5%B1%8F2022-05-23%20%E4%B8%8A%E5%8D%889.42.15.png\" alt=\"截屏2022-05-23 上午9.42.15\"></p>\n<p>这里是可以正常连接的</p>\n<p><img src=\"/../imgs/$%7Bfiilename%7D/%E6%88%AA%E5%B1%8F2022-05-23%20%E4%B8%8A%E5%8D%889.44.55.png\" alt=\"截屏2022-05-23 上午9.44.55\"></p>\n<p>上线成功<img src=\"/../imgs/$%7Bfiilename%7D/%E6%88%AA%E5%B1%8F2022-05-23%20%E4%B8%8A%E5%8D%889.45.22.png\" alt=\"截屏2022-05-23 上午9.45.22\"></p>\n<p>文件管理等东西正常使用</p>\n<p><img src=\"/../imgs/$%7Bfiilename%7D/%E6%88%AA%E5%B1%8F2022-05-23%20%E4%B8%8A%E5%8D%889.48.26.png\" alt=\"截屏2022-05-23 上午9.48.26\"></p>\n<p>窥屏控屏也是一样可以</p>\n<p>想要用别的功能需要捆绑功能够足的app</p>\n<p>这里自己寻找吧</p>\n<p>请勿用于违法行为</p>\n","categories":["笔记"],"tags":["渗透攻击"]},{"title":"windows配置java","url":"/2022/05/22/windows%E9%85%8D%E7%BD%AEjava/","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>最近换机，新电脑安装java，记录下：</p>\n<h2 id=\"下载-JDK\"><a href=\"#下载-JDK\" class=\"headerlink\" title=\"下载 JDK\"></a>下载 JDK</h2><p><strong>下载地址：</strong><a href=\"https://www.oracle.com/java/technologies/downloads/\">https://www.oracle.com/java/technologies/downloads/</a></p>\n<p>1、下载java安装包，第一次会选择安装，装的是JDK，选择路径如下：</p>\n<p>D:\\software\\java\\jdk</p>\n<p>2、第二次会让选择安装JRE，选择路径如下：</p>\n<p>D:\\software\\java\\jre</p>\n<p>3、配置环境变量：</p>\n<p>在系统变量中<br>（1）新建JAVA_HOME<br>变量名为JAVA_HOME，路径为：D:\\software\\java\\jdk<br>（2）新建CLASSPATH<br>变量名为CLASSPATH，路径为：   .;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar;<br>（3）添加PATH<br>在PATH中添加：  %JAVA_HOME%\\bin和%JAVA_HOME%\\jre\\bin</p>\n<p>4、测试：</p>\n<p>在cmd下，分别测试如下命令，通过代表安装成功：</p>\n<p>javac，java -version ，java</p>\n<p>5、最好重启下<br>———————————————</p>\n","categories":["随笔"],"tags":["系统的环境部署"]},{"title":"cobaltstrike免杀教程","url":"/2022/05/22/cobaltstrike%E5%85%8D%E6%9D%80%E6%95%99%E7%A8%8B/","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>项目搁置</p>\n","categories":["笔记"],"tags":["渗透攻击"]},{"title":"cobaltstrike连接教程","url":"/2022/05/22/cobaltstrike%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>服务器内放入cs文件后进入文件根目录执行</p>\n<span id=\"more\"></span>\n\n<p>.&#x2F;teamserver 服务器ip 密码</p>\n<p>或者nohup .&#x2F;teamserver 服务器ip 密码 &gt; myout.file 2&gt;&amp;1 &amp;</p>\n<p>即可静默运行</p>\n<p>执行后打开cs客户端</p>\n<p><img src=\"/../imgs/$%7Bfiilename%7D/%E6%88%AA%E5%B1%8F2022-05-22%20%E4%B8%8B%E5%8D%883.08.38.png\" alt=\"截屏2022-05-22 下午3.08.38\"></p>\n<p>端口默认50050</p>\n<p>如果出现连接失败 大概率端口没放行</p>\n<p>输入firewall-cmd –zone&#x3D;public –add-port&#x3D;50050&#x2F;tcp –permanent后</p>\n<p>输入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">firewall-cmd --reload</span><br></pre></td></tr></table></figure>\n\n<p>查看端口开放状态 出现yes即可解决错误</p>\n<p>如果还不行 那就去修改teamserver文件</p>\n<p>输入vim teamserver</p>\n<p>找到50050</p>\n<p>改为50051</p>\n<p>回到客户端连接<img src=\"/../imgs/$%7Bfiilename%7D/%E6%88%AA%E5%B1%8F2022-05-22%20%E4%B8%8B%E5%8D%883.11.50.png\" alt=\"截屏2022-05-22 下午3.11.50\"></p>\n<p>连接成功</p>\n","categories":["笔记"],"tags":["渗透攻击"]},{"title":"mac系统如何安装cobaltstrike","url":"/2022/05/22/strike/","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"资源下载\"><a href=\"#资源下载\" class=\"headerlink\" title=\"资源下载\"></a>资源下载</h1><span id=\"more\"></span>\n\n<table>\n<thead>\n<tr>\n<th>文件名</th>\n<th>下载地址</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Cobalt Strike 4 破解版</td>\n<td><a href=\"https://gitee.com/ssooking/cobaltstrike-cracked\">码云 Gitee</a></td>\n</tr>\n<tr>\n<td>Cobalt Strike 4 汉化包</td>\n<td><a href=\"https://sqlsec.lanzoux.com/i7Xsdeqy84b\">蓝奏云</a></td>\n</tr>\n<tr>\n<td>Cobalt Strike 4 icns 原版图标</td>\n<td><a href=\"https://sqlsec.lanzoux.com/iN64ieqyj1e\">蓝奏云</a></td>\n</tr>\n<tr>\n<td>Cobalt Strike 4 icns 圆角图标</td>\n<td><a href=\"https://sqlsec.lanzoux.com/i9t7Ierdo0d\">蓝奏云</a></td>\n</tr>\n<tr>\n<td>Cobalt Strike 4 icns 圆角矩形图标（网友 th1e 制作分享）</td>\n<td><a href=\"https://www.lanzoux.com/iCfzkg9p4dc\">蓝奏云</a></td>\n</tr>\n<tr>\n<td>Cobalt Strike 4.1 主程序</td>\n<td><a href=\"https://www.lanzoux.com/inhqhha6lrg\">蓝奏云</a></td>\n</tr>\n</tbody></table>\n<p>虽然 CS4 已经有封装好的 macOS 版本的 app了：cobaltstrike4.0-macOS app.zip 但是默认是英文界面的，如果我们需要自定义加载汉化包的话，可以选择下载 <strong>cobaltstrike4.0-cracked.zip</strong> 这个文件</p>\n<p><img src=\"/../imgs/$%7Bfiilename%7D/15989661861128.png\" alt=\"th1e制作的这个圆角矩形颜值也不错哦\"></p>\n<h1 id=\"文件结构\"><a href=\"#文件结构\" class=\"headerlink\" title=\"文件结构\"></a>文件结构</h1><p>下载好 <strong>cobaltstrike4.0-cracked.zip</strong> 解压，然后将下载好的汉化包 <strong>CobaltstrikeCN.jar</strong> 以及图标文件 <strong>cobaltstrike.icns</strong> 拷贝到同级目录下，最终的目录效果如下：</p>\n<p>bash</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">  cobaltstrike4.0-cracked tree</span><br><span class=\"line\">.</span><br><span class=\"line\">├── CobaltstrikeCN.jar  <span class=\"comment\"># 汉化包</span></span><br><span class=\"line\">├── LICENSE.txt</span><br><span class=\"line\">├── NOTICE.TXT</span><br><span class=\"line\">├── agscript</span><br><span class=\"line\">├── c2lint</span><br><span class=\"line\">├── cobaltstrike.auth</span><br><span class=\"line\">├── cobaltstrike.bat</span><br><span class=\"line\">├── cobaltstrike.icns <span class=\"comment\"># 图标</span></span><br><span class=\"line\">├── cobaltstrike.jar <span class=\"comment\"># 主程序</span></span><br><span class=\"line\">├── cobaltstrike.store</span><br><span class=\"line\">├── crackInfo.txt</span><br><span class=\"line\">├── icon.jpg</span><br><span class=\"line\">├── libicmp.so</span><br><span class=\"line\">├── libicmp64.so</span><br><span class=\"line\">├── libtapmanager.so</span><br><span class=\"line\">├── libtapmanager64.so</span><br><span class=\"line\">├── peclone</span><br><span class=\"line\">├── readme.txt</span><br><span class=\"line\">├── start.bat</span><br><span class=\"line\">├── start.sh</span><br><span class=\"line\">├── teamserver</span><br><span class=\"line\">└── third-party</span><br><span class=\"line\">    ├── README.winvnc.txt</span><br><span class=\"line\">    ├── winvnc.x64.dll</span><br><span class=\"line\">    └── winvnc.x86.dll</span><br><span class=\"line\"></span><br><span class=\"line\">1 directory, 24 files</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"命令启动\"><a href=\"#命令启动\" class=\"headerlink\" title=\"命令启动\"></a>命令启动</h1><p>首先我的 CS 的存放路径为:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">➜  cobaltstrike4.0-cracked <span class=\"built_in\">pwd</span></span><br><span class=\"line\">/Users/sec/Documents/Sec/cobaltstrike4.0-cracked</span><br></pre></td></tr></table></figure>\n\n<p>所以最终只需要如下命令即可启动：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /Users/sec/Documents/Sec/cobaltstrike4.0-cracked &amp;&amp; java -Xdock:icon=cobaltstrike.icns -Dfile.encoding=UTF-8 -javaagent:CobaltStrikeCN.jar -XX:ParallelGCThreads=4 -XX:+AggressiveHeap -XX:+UseParallelGC -jar cobaltstrike.jar</span><br></pre></td></tr></table></figure>\n\n<p>大家看填写自己对于的 CS 存放路径，本地命令行先启动看看：</p>\n<p><img src=\"/../imgs/$%7Bfiilename%7D/15951623571403.png\" alt=\"img\"></p>\n<p>确认启动无误后接下来就可以使用 macOS 自带的 <strong>自动操作 automator.app</strong> 来创建一个应用程序了。</p>\n<h1 id=\"制作APP\"><a href=\"#制作APP\" class=\"headerlink\" title=\"制作APP\"></a>制作APP</h1><p><img src=\"/../imgs/$%7Bfiilename%7D/15951624882637.png\" alt=\"img\"></p>\n<p>首先打开自动操作，选择左下角的「新建文稿」，选择文稿类型为「应用程序」，点击「选取」，左侧列表中找到<code>运行Shell脚本</code>然后拖入进去：</p>\n<p><img src=\"/../imgs/$%7Bfiilename%7D/15951626159755.png\" alt=\"img\"></p>\n<p>把上文中的命令行模拟启动对应的命令粘贴进来，点击右上角的「运行」测试一下看看能不能成功启动：</p>\n<p><img src=\"/../imgs/$%7Bfiilename%7D/15951626806858.png\" alt=\"img\"></p>\n<p>OK 测试应该是没有问题的，然后将 CS 关掉，<code>command</code>+<code>s</code>保存一下，保存的文件格式选择「应用程序」，自定义命名一下，然后保存到「应用程序」中：</p>\n<p><img src=\"/../imgs/$%7Bfiilename%7D/15951627966316.png\" alt=\"img\"></p>\n<p>然后就可以在「启动台 LaunchPad」中找到这个孤零零的应用程序了，点击一下就可以成功启动 CS 了：</p>\n<p><img src=\"/../imgs/$%7Bfiilename%7D/15951628527055.png\" alt=\"img\"></p>\n<p>当然这么丑的图标，国光我是看不下去的，下面来使用上文中下载的 CS 图标文件。</p>\n<p>在「应用程序」文件夹中找到我们刚刚制作的「Cobalt Strike 4」应用程序，「右键」点击「显示简介」，然后将下载好的<code>icns</code>图标文件拖入到简介的左上角：</p>\n<p><img src=\"/../imgs/$%7Bfiilename%7D/15951629707609.png\" alt=\"img\"></p>\n<p>最后的效果如下：</p>\n<p><img src=\"/../imgs/$%7Bfiilename%7D/1595163052585.png\" alt=\"img\"></p>\n<p>OK 美化成功，现在就可以在 mac 下优雅地启动 CS 了~~（吐槽一下 CS 图标和 macOS 下其他图标好违和呀）</p>\n","categories":["工具"],"tags":["渗透工具 -渗透攻击"]},{"title":"hexo博客添加搜索功能","url":"/2022/05/21/hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>1.安装搜索：在Hexo的根目录下，打开命令可执行窗口，执行如下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>\n\n<span id=\"more\"></span>\n\n<p>2.全局配置文件_config.yml，新增如下内容：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">search:</span><br><span class=\"line\">  path: search.xml</span><br><span class=\"line\">  field: post</span><br><span class=\"line\">  format: html</span><br><span class=\"line\">  <span class=\"built_in\">limit</span>: 10000</span><br></pre></td></tr></table></figure>\n\n<p>3.hexo主题配置文件（\\themes\\next_config.yml），修改local_search的enable为true：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Local search</span></span><br><span class=\"line\"><span class=\"comment\"># Dependencies: https://github.com/flashlab/hexo-generator-search</span></span><br><span class=\"line\">local_search:</span><br><span class=\"line\">  <span class=\"built_in\">enable</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># if auto, trigger search by changing input</span></span><br><span class=\"line\">  <span class=\"comment\"># if manual, trigger search by pressing enter key or search button</span></span><br><span class=\"line\">  trigger: auto</span><br><span class=\"line\">  <span class=\"comment\"># show top n results per article, show all results by setting to -1</span></span><br><span class=\"line\">  top_n_per_article: 1</span><br></pre></td></tr></table></figure>\n\n","categories":["随笔"],"tags":["博客的搭建与功能完善"]},{"title":"记一次ssr制作","url":"/2022/05/20/%E8%AE%B0%E4%B8%80%E6%AC%A1ssr%E5%88%B6%E4%BD%9C/","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>wget -N –no-check-certificate <a href=\"https://raw.githubusercontent.com/luyiming1016/ladderbackup/master/ssrmu.sh\">https://raw.githubusercontent.com/luyiming1016/ladderbackup/master/ssrmu.sh</a> &amp;&amp; chmod +x ssrmu.sh &amp;&amp; bash ssrmu.sh</p>\n<span id=\"more\"></span>\n\n<p>建议将默认的2333换为1000065535间的1000011000之间的一个随机端口</p>\n<p>cd &#x2F;usr&#x2F;src &amp;&amp; wget -N –no-check-certificate “<a href=\"https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh&quot;\">https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh&quot;</a> &amp;&amp; chmod +x tcp.sh &amp;&amp; .&#x2F;tcp.sh</p>\n<p>1</p>\n<p>5</p>\n<p>cd &#x2F;usr&#x2F;src &amp;&amp; .&#x2F;tcp.sh</p>\n<p>SSR for Android<br>链接：<a href=\"https://pan.baidu.com/s/10Jv7Q6kAFgRgQ_tZKzh7ow\">https://pan.baidu.com/s/10Jv7Q6kAFgRgQ_tZKzh7ow</a><br>提取码：vgs1<br>用法参考上面</p>\n<p>SSR for Mac<br>链接：<a href=\"https://pan.baidu.com/s/11dpLTWuJmnKI-IfK4Ku0Dg\">https://pan.baidu.com/s/11dpLTWuJmnKI-IfK4Ku0Dg</a><br>提取码：dp2z<br>用法参考上面</p>\n<p>SSR for Win<br>链接：<a href=\"https://pan.baidu.com/s/1Jw93QbxJNOSns8Ds3dnYaQ\">https://pan.baidu.com/s/1Jw93QbxJNOSns8Ds3dnYaQ</a><br>提取码：6cri</p>\n","categories":["笔记"],"tags":["代理"]},{"title":"记一次tg代理制作","url":"/2022/05/20/%E8%AE%B0%E4%B8%80%E6%AC%A1tg%E4%BB%A3%E7%90%86%E5%88%B6%E4%BD%9C/","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h2 id=\"一键安装\"><a href=\"#一键安装\" class=\"headerlink\" title=\"一键安装\"></a>一键安装</h2><ul>\n<li>脚本说明: Mtproto Proxy Go版 一键编译安装管理脚本</li>\n<li>系统支持: CentOS6+ &#x2F; Debian7+ &#x2F; Ubuntu14+</li>\n<li>已修复脚本问题，支持mtg2.0</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">wget -N --no-check-certificate https://github.com/whunt1/onekeymakemtg/raw/master/mtproxy_go.sh &amp;&amp; chmod +x mtproxy_go.sh &amp;&amp; bash mtproxy_go.sh</span><br></pre></td></tr></table></figure>\n\n<p>配置文件在 <code>/usr/local/mtproxy-go/mtproxy.conf</code> ，可以手动修改，配置项详细介绍参见 <a href=\"https://github.com/9seconds/mtg#environment-variables\">mtg 文档</a></p>\n <span id=\"more\"></span>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">  MTProxy-Go 一键管理脚本 [v2.0.0]</span><br><span class=\"line\">  </span><br><span class=\"line\">  0. 升级脚本</span><br><span class=\"line\">————————————</span><br><span class=\"line\">  1. 安装 MTProxy</span><br><span class=\"line\">  2. 更新 MTProxy</span><br><span class=\"line\">  3. 卸载 MTProxy</span><br><span class=\"line\">————————————</span><br><span class=\"line\">  4. 启动 MTProxy</span><br><span class=\"line\">  5. 停止 MTProxy</span><br><span class=\"line\">  6. 重启 MTProxy</span><br><span class=\"line\">————————————</span><br><span class=\"line\">  7. 设置 账号配置</span><br><span class=\"line\">  8. 查看 账号信息</span><br><span class=\"line\">  9. 查看 日志信息</span><br><span class=\"line\"> 10. 查看 链接信息</span><br><span class=\"line\">————————————</span><br><span class=\"line\"></span><br><span class=\"line\"> 当前状态: 已安装 并 已启动</span><br><span class=\"line\"></span><br><span class=\"line\"> 请输入数字 [0-10]:</span><br></pre></td></tr></table></figure>\n\n<p>输入1运行安装脚本</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">[信息] MTProxy服务 管理脚本下载完成 !</span><br><span class=\"line\">[信息] 开始设置 用户配置...</span><br><span class=\"line\">请输入 MTProxy 端口 [1-65535]</span><br><span class=\"line\">(默认: 443):443</span><br><span class=\"line\"></span><br><span class=\"line\">========================</span><br><span class=\"line\">        端口 :  443</span><br><span class=\"line\">========================</span><br><span class=\"line\"></span><br><span class=\"line\">请输入 MTProxy 密匙（普通密钥必须为32位，[0-9][a-z][A-Z]，建议留空随机生成）</span><br><span class=\"line\">(若需要开启TLS伪装建议直接回车):</span><br></pre></td></tr></table></figure>\n\n<p>端口号建议默认443，默认回车键即可，下一步也是直接回车，开启Fake TLS。<br> 等待片刻即可安装完成，整个过程只需要几分钟时间。你也可以手动编译安装，下方有详细参考链接。</p>\n<p>如果报错信息如下，请手动编译安装。</p>\n<blockquote>\n<p>[信息] 开始检查编译环境！</p>\n<p>[信息] 开始安装编译环境！</p>\n<p>&#x2F;dl&#x2F;go1.14.4.linux-amd64.tar.gz: Scheme missing.</p>\n<p>tar: go*linux-amd64.tar.gz: Cannot open: No such file or directory</p>\n<p>tar: Error is not recoverable: exiting now</p>\n<p>mv: cannot stat ‘go’: No such file or directory</p>\n<p>[错误] go 安装失败 !</p>\n</blockquote>\n<p>如果Unbuntu系统下报错信息如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">mtproxy_go.sh: line 136: make: command not found</span><br></pre></td></tr></table></figure>\n\n<p>那么输入：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">apt-get update</span><br><span class=\"line\">apt-get upgrade -y</span><br><span class=\"line\">apt-get install make</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"设置推广信息\"><a href=\"#设置推广信息\" class=\"headerlink\" title=\"设置推广信息\"></a>设置推广信息</h3><p>在弹出需要设置Tag时使用MTProxybot注册。</p>\n<ol>\n<li>关注 <a href=\"https://t.me/mtproxybot\">@MTProxybot</a> 机器人。</li>\n<li>发送<code>/newproxy</code>指令，bot返回添加方式。</li>\n<li>发送 host:port，host即你的 vps 外网 ip 地址，port 就是端口号。</li>\n<li>发送连接密码，即之前生成的 32 位随机字符串。</li>\n<li>接下来 bot 会返回生成的分享链接和代理tag：</li>\n</ol>\n<p>使用一键脚本生成的密钥并非上面需要的32位随机字符串，</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">ee271082e5da56c2877f215c225eb93ffe7777772e676f6f676c652e636f6d</span><br><span class=\"line\"><span class=\"comment\">#表示：&quot;ee&quot;+&quot;271082e5da56c2877f215c225eb93ffe&quot;+&quot;www.google.com&quot;.encode().hex()</span></span><br></pre></td></tr></table></figure>\n\n<p>ee后面的 <code>271082e5da56c2877f215c225eb93ffe</code> 才是需要的32位随机字符，在@MTProxybot 机器人注册后即可获得Tag，在终端中输入即可。</p>\n<p>注意：mtg 2.0 不支持推广信息，如果需要放置推广频道，建议使用1.0版本或原版mtproxy。</p>\n","categories":["笔记"],"tags":["科学的上网"]},{"title":"Next主题添加访客统计、访问次数统计、文章阅读次数统计","url":"/2022/05/20/Next%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E8%AE%BF%E5%AE%A2%E7%BB%9F%E8%AE%A1%E3%80%81%E8%AE%BF%E9%97%AE%E6%AC%A1%E6%95%B0%E7%BB%9F%E8%AE%A1%E3%80%81%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E6%AC%A1%E6%95%B0%E7%BB%9F%E8%AE%A1/","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>我是不太爱搞这些花里花哨的，但是感觉挺有纪念意义的</p>\n<span id=\"more\"></span>\n\n<p>1、打开next主题配置文件\\themes\\next_config.yml，搜索找到busuanzi_count，把enable设置为true</p>\n<p>busuanzi_count:<br>  enable: true<br>  total_visitors: true   #统计访客数<br>  total_visitors_icon: user<br>  total_views: true    #统计访问数<br>  total_views_icon: eye<br>  post_views: true   #统计文章阅读数<br>  post_views_icon: eye</p>\n<p>2、同样是在next主题配置文件\\themes\\next_config.yml下，搜索footer，在它底下添加counter，设值为true</p>\n<p>  #统计<br>  counter: true</p>\n<p>3、来到themes\\next\\layout_partials，找到footer.swig文件，打开编辑，在底下添加代码</p>\n\n\n","categories":["随笔"],"tags":["博客的搭建与功能完善"]},{"title":"发布文章","url":"/2022/05/20/%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0/","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>在搭建好我们的博客后最主要的就是如何发文章</p>\n<p>我们需要的工具有 typora<a href=\"http://huasheng.cf/2022/05/20/Typora%E7%A0%B4%E8%A7%A3%E7%89%88/\">点我</a></p>\n<p>安装好工具后在myblog文件夹内打开终端，输入hexo new 项目名称</p>\n<p>在myblog&#x2F;source&#x2F;_posts文件夹内找到“项目名称.md”文件</p>\n<p>用typora打开文件即可进行文章的撰写与发布</p>\n<p>撰写完毕后执行<a href=\"http://huasheng.cf/2022/05/20/%E5%BF%AB%E9%80%9F%E6%8E%A8%E9%80%81/\">快速推送</a>文章中教大家制作的脚本即可</p>\n","categories":["随笔"],"tags":["博客"]},{"title":"Typora破解版","url":"/2022/05/20/Typora%E7%A0%B4%E8%A7%A3%E7%89%88/","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>Typora安装激活包<br>下载链接：<a href=\"https://pan.baidu.com/s/1K-uRpJrBNv0evvUo1qtt4w\">https://pan.baidu.com/s/1K-uRpJrBNv0evvUo1qtt4w</a><br>提取码：thmb</p>\n<p>使用教程：<a href=\"http://www.itmind.net/14627.html\">http://www.itmind.net/14627.html</a></p>\n","categories":["工具"],"tags":["博客的搭建与功能完善"]},{"title":"快速推送","url":"/2022/05/20/%E5%BF%AB%E9%80%9F%E6%8E%A8%E9%80%81/","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>vim 1.sh</p>\n<p>hexo clean<br>hexo g<br>hexo d</p>\n<p>:wq</p>\n<p>以后每次都执行bash 1.sh即可</p>\n","categories":["随笔"],"tags":["博客的搭建与功能完善"]},{"title":"设置中文","url":"/2022/05/20/%E8%AE%BE%E7%BD%AE%E4%B8%AD%E6%96%87/","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>打开站点配置文件：站点根目录&#x2F;_config.yml</p>\n<span id=\"more\"></span>\n\n<p>然后搜索找到language属性，属性值配置成zh-Hans，表示中文</p>\n<p>language: zh-Hans</p>\n<p>然后重新打包部署，却发现未生效，可是网上看的一篇教程明明说这这样配置的，果然还是要自己验证下</p>\n<p>到 Hexo站点根目录\\themes\\next\\languages文件夹下看有支持哪些语言，发现中文有如下三种，就是没有zh-Hans</p>\n<pre><code>zh-CN.yml\nzh-HK.yml\nzh-TW.yml\n</code></pre>\n<p>那么有两种解决方法</p>\n<p>1.是将language属性配置成zh-CN</p>\n<p>language: zh-Hans</p>\n<p>2.将zh-CN.yml文件名改成zh-Hans<br>NexT目前支持的多语言</p>\n<p>到NexT官网<a href=\"https://theme-next.org/docs/getting-started/%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E7%9B%AE%E5%89%8DNexT%E6%94%AF%E6%8C%81%E7%9A%84%E5%A4%9A%E8%AF%AD%E8%A8%80%EF%BC%8C%E4%B9%9F%E5%B0%B1%E6%98%AF/themes/next/languages%E7%9B%AE%E5%BD%95%E4%B8%8B%E7%9A%84%E6%89%80%E6%9C%89%E8%AF%AD%E8%A8%80%EF%BC%8C%E5%BD%93%E7%84%B6%E6%88%91%E4%BB%AC%E4%B9%9F%E5%8F%AF%E4%BB%A5%E6%A8%A1%E4%BB%BF/themes/next/languages%E4%B8%8B%E8%AF%AD%E8%A8%80%E6%96%87%E4%BB%B6%E7%9A%84%E6%A0%BC%E5%BC%8F%EF%BC%8C%E8%87%AA%E5%B7%B1%E6%B7%BB%E5%8A%A0%E5%85%B6%E4%BB%96%E8%AF%AD%E8%A8%80%E7%9A%84%E6%94%AF%E6%8C%81\">https://theme-next.org/docs/getting-started/可以看到目前NexT支持的多语言，也就是\\themes\\next\\languages目录下的所有语言，当然我们也可以模仿\\themes\\next\\languages下语言文件的格式，自己添加其他语言的支持</a><br>Language\tExample\tCode<br>?? Chinese (Simplified)\t简体中文\tzh-CN<br>?? Chinese (Traditional)\t繁體中文\tzh-TW<br>?? Chinese (Hong Kong)\t繁體中文-香港\tzh-HK<br>?? Dutch\tNiederländisch\tnl<br>?? English\tEnglish\ten<br>?? French\tFrançais\tfr<br>?? German\tDeutsch\tde<br>?? Indonesian\tIndonesia\tid<br>?? Italian\tItaliano\tit<br>?? Japanese\t日本語\tja<br>?? Korean\t한국어\tko<br>?? Persian\tفارسی\tfa<br>?? Portuguese\tPortuguês\tpt<br>?? Portuguese (Brazilian)\tPortuguês (Brazilian)\tpt-BR<br>?? Russian\tРусский\tru<br>?? Spanish\tEspañol\tes<br>?? Turkish\tTürk\ttr<br>?? Ukrainian\tУкраїнський\tuk<br>?? Vietnamese\tTiếng Việt\tvi</p>\n<p>重新打包部署就可以看到更改后的语言了</p>\n","categories":["随笔"],"tags":["博客的搭建与功能完善"]},{"title":"设置hexo首页只显示部分摘要","url":"/2022/05/20/%E9%9A%8F%E7%AC%94%E5%B0%8F%E8%AE%B0/","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>本文针对Next主题，不确保对于其它主题有效（但从修改模式来看，是有效的）</p>\n<p>Next默认是会显示全文的，这样显然很不方便，因此需要一些方法去只显示前面一部分。<br>修改配置</p>\n<span id=\"more\"></span>\n\n<p>首先需要在Next主题的_config.yml中把设置打开：(默认安装时就打开了)</p>\n<p>excerpt_description: true</p>\n<pre><code>之后有两种方法\n方法一：写概述\n</code></pre>\n<p>在文章的front-matter中添加description，其中description中的内容就会被显示在首页上，其余一律不显示。</p>\n<hr>\n<p>title: 让首页显示部分内容<br>date: 2020-02-23 22:55:10<br>description: 这是显示在首页的概述，正文内容均会被隐藏。比较不方便的是还得写一下概述，很多时候会懒得写概述，于是就需要第二种方法了。<br>方法二：文章截断</p>\n<hr>\n<p>在需要截断的地方加入：</p>\n<!--more-->\n\n<pre><code>1\n</code></pre>\n<p>首页就会显示这条以上的所有内容，隐藏接下来的所有内容。<br>例如本文会显示到修改配置上面。</p>\n<p>这个明显就方便很多，但当然有利有弊，比如开头都是废话首页看着就不是很好看，因此我一般会先选择方法二，如果感觉文章前面的写的不太好再用方法一。<br>————————————————<br>版权声明：本文为CSDN博主「yueyue200830」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href=\"https://blog.csdn.net/yueyue200830/article/details/104470646/\">https://blog.csdn.net/yueyue200830/article/details/104470646/</a></p>\n","categories":["随笔"],"tags":["博客的搭建与功能完善"]}]